get:
  conversations:
    description: 'List conversations the calling user may access.'
    url: 'https://api.slack.com/methods/users.conversations'
    endpoint: /users.conversations
    parameters:
      cursor:
        type: string
        description: 'Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request''s `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.'
      limit:
        type: integer
        description: 'The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn''t been reached. Must be an integer no larger than 1000.'
      user:
        type: string
        description: 'Browse conversations by a specific user ID''s membership. Non-public channels are restricted to those where the calling user shares membership.'
      exclude_archived:
        type: boolean
        description: 'Set to `true` to exclude archived channels from the list'
      types:
        type: string
        description: 'Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`'
  getPresence:
    description: 'Gets user presence information.'
    url: 'https://api.slack.com/methods/users.getPresence'
    endpoint: /users.getPresence
    parameters:
      user:
        type: string
        description: 'User to get presence info on. Defaults to the authed user.'
  identity:
    description: 'Get a user''s identity.'
    url: 'https://api.slack.com/methods/users.identity'
    endpoint: /users.identity
    parameters: {  }
  info:
    description: 'Gets information about a user.'
    url: 'https://api.slack.com/methods/users.info'
    endpoint: /users.info
    parameters:
      include_locale:
        type: boolean
        description: 'Set this to `true` to receive the locale for this user. Defaults to `false`'
      user:
        type: string
        description: 'User to get info on'
  getList:
    description: 'Lists all users in a Slack team.'
    url: 'https://api.slack.com/methods/users.list'
    endpoint: /users.list
    parameters:
      presence:
        type: boolean
        description: 'Deprecated. Whether to include presence data in the output. Defaults to `false`. Setting this to `true` reduces performance, especially with large teams.'
      cursor:
        type: string
        description: 'Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request''s `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.'
      limit:
        type: integer
        description: 'The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn''t been reached.'
      include_locale:
        type: boolean
        description: 'Set this to `true` to receive the locale for users. Defaults to `false`'
  lookupByEmail:
    description: 'Find a user with an email address.'
    url: 'https://api.slack.com/methods/users.lookupByEmail'
    endpoint: /users.lookupByEmail
    parameters:
      email:
        type: string
        description: 'An email address belonging to a user in the workspace'
post:
  setPhoto:
    description: 'Set the user profile photo'
    url: 'https://api.slack.com/methods/users.setPhoto'
    endpoint: /users.setPhoto
    parameters:
      image:
        type: string
        description: 'File contents via `multipart/form-data`.'
        required: true
      crop_w:
        type: integer
        description: 'Width/height of crop box (always square)'
      crop_y:
        type: integer
        description: 'Y coordinate of top-left corner of crop box'
      crop_x:
        type: integer
        description: 'X coordinate of top-left corner of crop box'
  deletePhoto:
    description: 'Delete the user profile photo'
    url: 'https://api.slack.com/methods/users.deletePhoto'
    endpoint: /users.deletePhoto
    parameters: {  }
  setActive:
    description: 'Marked a user as active. Deprecated and non-functional.'
    url: 'https://api.slack.com/methods/users.setActive'
    endpoint: /users.setActive
    parameters: {  }
  setPresence:
    description: 'Manually sets user presence.'
    url: 'https://api.slack.com/methods/users.setPresence'
    endpoint: /users.setPresence
    parameters:
      presence:
        type: string
        description: 'Either `auto` or `away`'
