<?php

namespace HnhDigital\SlackApi\Users;

/*
 * This file is part of the PHP Slack API.
 *
 * (c) H&H|Digital <hello@hnh.digital>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

use HnhDigital\SlackApi\Foundation\Base;

/**
 * This is the Profile class.
 *
 * This file is automatically generated.
 *
 * @link 
 *
 * @author Rocco Howard <rocco@hnh.digital>
 */
class Profile extends Base
{
    /**
     * Endpoint.
     *
     * @var string
     */
    protected $endpoint = '';

    /**
     * Constructor.
     *
     * @return void
     */
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Retrieves a user's profile information.
     *
     * @link https://api.slack.com/methods/users.profile.get
     *
     * @return array
     */
    public function get($optional = [])
    {
        return $this->apiCall('get', '/users.profile.get');
    }

    /**
     * Set the profile information for a user.
     *
     * @param array $optional
     *                        - [profile=null] (string) Collection of key:value pairs presented as a URL-encoded
     *                        JSON hash.
     *                        - [user=null] (string) ID of user to change. This argument may only be
     *                        specified by team admins on paid teams.
     *                        - [value=null] (string) Value to set a single key to. Usable only if `profile`
     *                        is not passed.
     *                        - [name=null] (string) Name of a single key to set. Usable only if `profile` is
     *                        not passed.
     *
     * @link https://api.slack.com/methods/users.profile.set
     *
     * @return mixed
     */
    public function set($optional = [])
    {
        return $this->apiCall('post', '/users.profile.set', ['json' => array_merge([
        ], $optional)]);
    }
}
